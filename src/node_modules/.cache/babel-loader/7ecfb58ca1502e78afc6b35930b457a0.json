{"ast":null,"code":"'use strict';\n\nconst _require = require('readable-stream'),\n      Readable = _require.Readable;\n\nconst _require2 = require('../supports'),\n      supportsFileReader = _require2.supportsFileReader;\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.');\n  }\n\n  class FileStream extends Readable {\n    constructor(file, options = {}) {\n      super(options);\n      this.file = file;\n      this.offset = options.offset || 0;\n      this.chunkSize = options.chunkSize || 1024 * 1024;\n      this.fileReader = new self.FileReader(file);\n\n      this.fileReader.onloadend = event => {\n        const data = event.target.result;\n\n        if (data.byteLength === 0) {\n          this.push(null);\n        }\n\n        this.push(new Uint8Array(data));\n      };\n\n      this.fileReader.onerror = err => this.destroy(err);\n    }\n\n    _read(size) {\n      const end = this.offset + this.chunkSize;\n      const slice = file.slice(this.offset, end);\n      this.fileReader.readAsArrayBuffer(slice);\n      this.offset = end;\n    }\n\n  }\n\n  return new FileStream(file, options);\n};\n\nmodule.exports = streamFromFileReader;","map":null,"metadata":{},"sourceType":"script"}