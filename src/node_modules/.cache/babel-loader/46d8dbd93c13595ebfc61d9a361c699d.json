{"ast":null,"code":"var _jsxFileName = \"/home/urjit/Documents/Blockchain/Etherium/SignContract/src/src/App.js\";\nimport React, { Component } from 'react';\nimport { ToastProvider, useToasts } from '../node_modules/react-toast-notifications/dist/index.js';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Form, Button, Table } from 'react-bootstrap';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './contracts/Verification.json';\nimport $ from 'jquery';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: '0x0',\n      loading: true,\n      msg: '0x0',\n      signature: '0x0',\n      web3: null,\n      ipfsHash: null,\n      buffer: '',\n      ethAddress: '',\n      blockNumber: '',\n      transactionHash: '',\n      gasUsed: '',\n      txReceipt: ''\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        var contract = require('truffle-contract');\n\n        var Instance = contract(storehash);\n        Instance.setProvider(web3.currentProvider);\n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        this.setState({\n          web3: web3,\n          account\n        }, this.getData);\n        this.setState({\n          ethAddress: '0xE2553736f9FEd68Ab8Bb7A311cdE5217592A59F7'\n        });\n        $('#signature').hide();\n        $('#invite_url').hide();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n    };\n\n    this.convertToBuffer = async reader => {\n      const bfr = await Buffer.from(reader.result);\n      console.log(bfr);\n      this.setState({\n        buffer: bfr\n      });\n    };\n\n    this.onClick = async event => {\n      event.preventDefault();\n\n      try {\n        this.setState({\n          blockNumber: 'Waiting...',\n          gasUsed: 'waiting...'\n        });\n        console.log(this.state.transactionHash);\n        await web3.eth.getTransactionReceipt(this.state.transactionHash, (err, txReceipt) => {\n          console.log(err, txReceipt);\n          this.setState({\n            txReceipt\n          });\n        });\n        console.log(this.state.txReceipt.blockNumber);\n        await this.setState({\n          blockNumber: this.state.txReceipt.blockNumber\n        });\n        await this.setState({\n          gasUsed: this.state.txReceipt.gasUsed\n        });\n        $('#signature').show();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n\n      const _useToasts = useToasts(),\n            addToast = _useToasts.addToast;\n\n      const accounts = await web3.eth.getAccounts();\n      await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n        this.setState({\n          ipfsHash: ipfsHash[0].hash\n        });\n        const Hash = new web3.eth.Contract(storehash.abi, '0x54Cf40a61994eCaE67CEBF36e7DcEC4293c91211');\n        Hash.methods.sendHash(this.state.ipfsHash).send({\n          from: accounts[0]\n        }, (error, transactionHash) => {\n          if (error) {\n            addToast(error.message, {\n              appearance: 'error'\n            });\n          } else {\n            this.setState({\n              transactionHash\n            });\n            addToast('Saved Successfully', {\n              appearance: 'success'\n            });\n          }\n        });\n      });\n    };\n\n    this.signMessage = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            web3 = _this$state.web3,\n            account = _this$state.account,\n            ipfsHash = _this$state.ipfsHash;\n      const ipfs_hex = web3.utils.asciiToHex(ipfsHash);\n      const id = web3.utils.sha3(ipfs_hex, Date.now());\n      const Hash = new web3.eth.Contract(storehash.abi, '0x54Cf40a61994eCaE67CEBF36e7DcEC4293c91211');\n      Hash.methods.addDocument(id, ipfs_hex).send({\n        from: account\n      });\n      $('#invite_url').show();\n      const sign_page_url = 'sign';\n      const url = 'window.location.href' + sign_page_url + '/?id=' + id + '&ipfs=' + ipfsHash;\n      $(\"#invite_url .card-body\").append('<p><a href=\"' + url + '\">' + url + '</p>');\n    };\n  }\n\n  render() {\n    return React.createElement(ToastProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Ethereum Signatures\"), React.createElement(\"ul\", {\n      className: \"navbar-nav px-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"nav-item text-nowrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"nav-link \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Your Account: \", React.createElement(\"div\", {\n      id: \"account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.account)))))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card bg-light mb-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Step:1\"), \" Choose file to send to IPFS \")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.captureFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Send it\")))), React.createElement(Button, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \" Get Transaction Receipt \"), React.createElement(Table, {\n      bordered: true,\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Tx Receipt Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Values\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"IPFS Hash # stored on Eth Contract\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.ipfsHash)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Ethereum Contract Address\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.ethAddress)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Tx Hash #\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.transactionHash)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Block Number #\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.blockNumber)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Gas Used\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.gasUsed)))))), React.createElement(\"div\", {\n      className: \"raw\",\n      id: \"signature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card bg-light mb-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Step:2\"), \" Sign the document \")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.signMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" I Agree \"))))), React.createElement(\"div\", {\n      className: \"raw\",\n      id: \"invite_url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card bg-light mb-3 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      className: \"font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Step:3\"), \" IPFS Link \")), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/urjit/Documents/Blockchain/Etherium/SignContract/src/src/App.js"],"names":["React","Component","ToastProvider","useToasts","Container","Form","Button","Table","web3","ipfs","storehash","$","App","state","account","loading","msg","signature","ipfsHash","buffer","ethAddress","blockNumber","transactionHash","gasUsed","txReceipt","componentDidMount","contract","require","Instance","setProvider","currentProvider","accounts","eth","getAccounts","setState","getData","hide","error","console","log","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","bfr","Buffer","from","result","onClick","getTransactionReceipt","err","show","onSubmit","addToast","add","hash","Hash","Contract","abi","methods","sendHash","send","message","appearance","signMessage","ipfs_hex","utils","asciiToHex","id","sha3","Date","now","addDocument","sign_page_url","url","append","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { ToastProvider, useToasts } from '../node_modules/react-toast-notifications/dist/index.js';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Form, Button, Table} from 'react-bootstrap';\nimport web3 from './web3';\nimport ipfs from './ipfs';\nimport storehash from './contracts/Verification.json';\nimport $ from 'jquery';\n\nclass App extends Component {\n  \n  state = {\n      account: '0x0',\n      loading: true,\n      msg: '0x0',\n      signature: '0x0',\n      web3: null,\n      ipfsHash: null,\n      buffer:'',\n      ethAddress:'',\n      blockNumber:'',\n      transactionHash:'',\n      gasUsed:'',\n      txReceipt: ''   \n    }  \n\n    componentDidMount = async () => {\n      try{\n        var contract = require('truffle-contract');\n        var Instance = contract(storehash);\n        Instance.setProvider(web3.currentProvider); \n        const accounts = await web3.eth.getAccounts();\n        const account = accounts[0];\n        this.setState({web3: web3, account}, this.getData);             \n        this.setState({ethAddress: '0xE2553736f9FEd68Ab8Bb7A311cdE5217592A59F7' });\n        $('#signature').hide();\n        $('#invite_url').hide();\n      }\n\n      catch(error){\n        console.log(error)\n      }\n    }\n\n    captureFile =(event) => {\n      event.stopPropagation()\n      event.preventDefault()\n      const file = event.target.files[0]\n      let reader = new window.FileReader()\n      reader.readAsArrayBuffer(file)\n      reader.onloadend = () => this.convertToBuffer(reader)\n    };\n\n    convertToBuffer = async(reader) => {\n      const bfr = await Buffer.from(reader.result);\n      console.log(bfr);\n      this.setState({buffer: bfr});\n    };\n\n    onClick = async (event) => {\n      event.preventDefault();\n      try {\n        this.setState({blockNumber: 'Waiting...', gasUsed: 'waiting...'});\n        console.log(this.state.transactionHash);\n        await web3.eth.getTransactionReceipt(this.state.transactionHash,(err,txReceipt) => {console.log(err,txReceipt);\n          this.setState({txReceipt});\n        });\n        console.log(this.state.txReceipt.blockNumber);\n        await this.setState({blockNumber: this.state.txReceipt.blockNumber});\n        await this.setState({gasUsed: this.state.txReceipt.gasUsed});\n        $('#signature').show();\n      }\n      catch(error){\n        console.log(error);\n      }\n    }\n    \n      \n\n      onSubmit = async (event) => {\n        event.preventDefault();\n        const { addToast } = useToasts();\n        const accounts = await web3.eth.getAccounts();\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\n          this.setState({ipfsHash: ipfsHash[0].hash});      \n          const Hash = new web3.eth.Contract(storehash.abi, '0x54Cf40a61994eCaE67CEBF36e7DcEC4293c91211')  \n          Hash.methods.sendHash(this.state.ipfsHash).send({from: accounts[0]}, (error, transactionHash) => {\n            if(error){\n              addToast(error.message, { appearance: 'error' });\n            }else {\n              this.setState({transactionHash});\n              addToast('Saved Successfully', { appearance: 'success' });\n            }\n          });\n        })\n\n      }      \n  /*\n  getData = async => {\n    console.log(\"getData\");\n      const {account, loading} = this.state ;   \n      console.log(\"account:\"+ account + \"loadin:\"+ loading);\n      if(loading){\n        $(\"#loader\").hide();\n        $(\"#content\").show();\n      }\n  }\n  */\n  signMessage = async(event) => {\n    event.preventDefault();\n    const {web3, account, ipfsHash } = this.state;\n    const ipfs_hex = web3.utils.asciiToHex(ipfsHash);\n    const id = web3.utils.sha3(ipfs_hex, Date.now());\n    const Hash = new web3.eth.Contract(storehash.abi, '0x54Cf40a61994eCaE67CEBF36e7DcEC4293c91211')  \n    Hash.methods.addDocument(id, ipfs_hex).send({from: account});\n    $('#invite_url').show();\n    const sign_page_url = 'sign';\n    const url = 'window.location.href' + sign_page_url + '/?id=' + id + '&ipfs=' + ipfsHash;  \n    $(\"#invite_url .card-body\").append('<p><a href=\"'+url+ '\">'+ url + '</p>');\n\n  }\n\n  render() {\n    \n  return (\n    <ToastProvider>\n    <div className=\"App\">\n      <header >\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0\">\n          <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" >Ethereum Signatures</a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap\">\n              <small><a className=\"nav-link \" >Your Account: <div id=\"account\" ><span >{this.state.account}</span></div></a></small>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      \n      <Container>\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card bg-light mb-3 mx-auto\">\n              <div className=\"card-header\">\n                <h3> <p className=\"font-weight-bold\">Step:1</p> Choose file to send to IPFS </h3>\n              </div>\n              \n              <div className=\"card-body\">   \n                <Form onSubmit={this.onSubmit} >\n                  <input type = \"file\" onChange = {this.captureFile}/>\n                  <Button variant=\"primary\" type=\"submit\"> \n                      Send it \n                  </Button>\n                </Form>\n              </div>\n              \n            </div>\n            <Button onClick = {this.onClick}> Get Transaction Receipt </Button>\n            <Table bordered responsive>\n                  <thead>\n                    <tr>\n                      <th>Tx Receipt Category</th>\n                      <th>Values</th>\n                    </tr>\n                  </thead>               \n                  <tbody>\n                    <tr>\n                      <td>IPFS Hash # stored on Eth Contract</td>\n                      <td>{this.state.ipfsHash}</td>\n                    </tr>\n                    <tr>\n                      <td>Ethereum Contract Address</td>\n                      <td>{this.state.ethAddress}</td>\n                    </tr>\n                    <tr>\n                      <td>Tx Hash #</td>\n                      <td>{this.state.transactionHash}</td>\n                    </tr>                  \n                    <tr>\n                      <td>Block Number #</td>\n                      <td>{this.state.blockNumber}</td>\n                    </tr>                  \n                    <tr>\n                      <td>Gas Used</td>\n                      <td>{this.state.gasUsed}</td>\n                    </tr>                \n                  </tbody>\n              </Table>\n          </div>              \n        </div>  \n\n        <div className=\"raw\" id=\"signature\">\n          <div className=\"col-sm-12\">\n            <div className=\"card bg-light mb-3 mx-auto\">\n              <div className=\"card-header\">\n                <h3> <p className=\"font-weight-bold\">Step:2</p> Sign the document </h3>\n              </div>\n              <div className=\"card-body\">  \n                <Button onClick = {this.signMessage}> I Agree </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"raw\" id=\"invite_url\">\n          <div className=\"col-sm-12\">\n            <div className=\"card bg-light mb-3 mx-auto\">\n              <div className=\"card-header\">\n                <h3> <p className=\"font-weight-bold\">Step:3</p> IPFS Link </h3>\n              </div>\n              <div className=\"card-body\">  \n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n     \n\n\n      {/* \n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10\">\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap pt-3 pb-2 mb-3 border-bottom\" style={{marginTop: '40px'}}>\n              <div id=\"loader\">\n                <p className=\"text-center\">Loading...</p>\n              </div>\n              <div id=\"content\" className=\"col-lg-9\" style={{display: 'none'}}>\n                <h2>Sign a Message</h2>\n                <p>Sign a message from your account with the form below and broadcast it to the blockchain!</p>\n                <form  className=\"\" ref= \"myForm\" role=\"form\" onSubmit={this.signMessage}>\n                  <div className=\"form-group\">\n                    <input id=\"message\" className=\"form-control\" type=\"text\"></input>\n                  </div>\n                  <button type=\"submit\" className=\"btn btn-primary\">Sign & Send</button>\n                </form>\n                <p id=\"msg\">{this.msg}</p>\n                <p id=\"signature\">{this.signature}</p>\n                <button id=\"verify\" className=\"btn btn-primary\" style={{display: 'none'}}> Verify Signature</button>\n                <p id=\"address\"></p>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>*/}\n    </div> \n    </ToastProvider>\n  );\n  }\n}  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}