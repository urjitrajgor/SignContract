{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst streamToValueWithTransformer = require('../utils/stream-to-value-with-transformer');\n\nconst PeerId = require('peer-id');\n\nconst PeerInfo = require('peer-info');\n\nmodule.exports = send => {\n  return promisify((peerId, opts, callback) => {\n    if (typeof opts === 'function' && !callback) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    const handleResult = (res, callback) => {\n      const peerIds = res.map(r => new PeerInfo(PeerId.createFromB58String(r.ID)));\n      callback(null, peerIds);\n    };\n\n    send({\n      path: 'dht/query',\n      args: peerId,\n      qs: opts\n    }, (err, result) => {\n      if (err) {\n        return callback(err);\n      }\n\n      streamToValueWithTransformer(result, handleResult, callback);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}